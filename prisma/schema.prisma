generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "mongodb"
url = env("DATABASE_URL")
}

model User {
id String @id @default(auto()) @map("_id") @db.ObjectId
email String @unique
name String
companyName String
businessRegistrationNumber String
physicalAddress String
contactPersonName String
contactPersonEmail String
contactPersonPhone String
bankDetails Json
password String
isAdmin Boolean @default(false)
bookings Booking[]
helpdeskTickets HelpdeskTicket[]
}

enum BookingStatus {
PENDING
CONFIRMED
CANCELED
}

model Booking {
id              String        @id @default(auto()) @map("_id") @db.ObjectId
userId          String        @db.ObjectId
containerId     String        @db.ObjectId
timeslotId      String        @db.ObjectId
status          BookingStatus @default(PENDING)
referenceNumber String
towerLocation   String
truckId         String        @db.ObjectId
createdAt       DateTime      @default(now())
updatedAt       DateTime      @updatedAt
}

model Container {
id String @id @default(auto()) @map("_id") @db.ObjectId
containerNumber String
size String
type String
status String
location String
bookings Booking[]
}

model Timeslot {
id String @id @default(auto()) @map("_id") @db.ObjectId
date String
time String
bookings Booking[]
}

model HelpdeskTicket {
id String @id @default(auto()) @map("_id") @db.ObjectId
user User @relation(fields: [userId], references: [id])
userId String @db.ObjectId
message String
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

model Collector {
id String @id @default(auto()) @map("_id") @db.ObjectId
name String
}

model Company {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  regNumber  String    @unique
  address    String
  contact    String
  email      String    @unique
  phone      String
  trucks     Truck[]
  bankDetails BankDetails[]
}

model BankDetails {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  accountName  String
  bankName     String
  accountNumber String
  branchCode   String
  companyId    String  @db.ObjectId
}

model Truck {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  license   String   @unique
  make      String
  model     String
  year      Int
  tracker   String
  companyId String  @db.ObjectId
  company   Company @relation(fields: [companyId], references: [id])
}
