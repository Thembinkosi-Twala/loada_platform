generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "mongodb"
url = env("DATABASE_URL")
}

model User {
id String @id @default(auto()) @map("_id") @db.ObjectId
email String @unique
name String
companyName String
businessRegistrationNumber String
physicalAddress String
contactPersonName String
contactPersonEmail String
contactPersonPhone String
bankDetails Json
password String
isAdmin Boolean @default(false)
bookings Booking[]
helpdeskTickets HelpdeskTicket[]
}

enum BookingStatus {
PENDING
CONFIRMED
CANCELED
}

model Booking {
id String @id @default(auto()) @map("_id") @db.ObjectId
user User @relation(fields: [userId], references: [id])
userId String @db.ObjectId
container Container @relation(fields: [containerId], references: [id])
containerId String @db.ObjectId
timeslot Timeslot @relation(fields: [timeslotId], references: [id])
timeslotId String @db.ObjectId
status BookingStatus @default(PENDING)
referenceNumber String
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

model Container {
id String @id @default(auto()) @map("_id") @db.ObjectId
containerNumber String
size String
type String
status String
location String
bookings Booking[]
}

model Timeslot {
id String @id @default(auto()) @map("_id") @db.ObjectId
date String
time String
bookings Booking[]
}

model HelpdeskTicket {
id String @id @default(auto()) @map("_id") @db.ObjectId
user User @relation(fields: [userId], references: [id])
userId String @db.ObjectId
message String
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

model Collector {
id String @id @default(auto()) @map("_id") @db.ObjectId
name String
}